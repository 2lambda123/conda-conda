#!/bin/bash
NO_SUCH_DIRECTORY=70
NO_SUCH_ENVIRONMENT=75
NO_WRITE_ACCESS=80

# Ensure that this script is sourced, not executed
# Note that if the script was executed, we're running inside bash!
if [[ -n $BASH_VERSION ]] && [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    >&2 echo "Error: activate must be sourced. Run 'source activate envname'
instead of 'activate envname'.
"
    "$(dirname "$0")/conda" ..sourcehelp
    exit 1
fi

# Determine the directory containing this script
if [[ -n $BASH_VERSION ]]; then
    _SCRIPT_LOCATION=${BASH_SOURCE[0]}
elif [[ -n $ZSH_VERSION ]]; then
    _SCRIPT_LOCATION=${funcstack[1]}
else
    echo "Only bash and zsh are supported"
    return 1
fi
_THIS_DIR=$(dirname "$_SCRIPT_LOCATION")

# http://stackoverflow.com/a/21188136/161801
get_abs_filename() {
    echo "$(cd "$(dirname "$1")" && pwd)/$(basename "$1")"
}

# TODO Find a better way to do this that works on both bash and zsh
case "$1" in
"-h")
    "$_THIS_DIR/conda" ..sourcehelp
    return -1
    ;;
"--help")
    "$_THIS_DIR/conda" ..sourcehelp
    return -1
    ;;
esac

"$_THIS_DIR/conda" ..checkenv "$@" 2> /dev/null
_EXIT_CODE="$?"
if [[ $_EXIT_CODE -eq 0 ]]; then
    _NEW_PATH=$("$_THIS_DIR/conda" ..deactivate)
    export PATH=$_NEW_PATH
    if (( $("$_THIS_DIR/conda" ..changeps1) )); then
        if [[ -n $CONDA_OLD_PS1 ]]; then
            PS1=$CONDA_OLD_PS1
            unset CONDA_OLD_PS1
        fi
    fi
else
    if [[ "$#" -lt 1 ]]; then
        >&2 echo "Error: no environment provided."
        _EXIT_CODE=1
    elif [[ "$#" -gt 1 ]]; then
        >&2 echo "Error: did not expect more than one argument."
        _EXIT_CODE=1
    elif [[ $_EXIT_CODE -eq $NO_SUCH_DIRECTORY ]]; then
        # TODO: Remove "bin" -- not really relevant here
        >&2 echo "Error: no such directory: $(get_abs_filename "$@")/bin"
    elif [[ $_EXIT_CODE -eq $NO_SUCH_ENVIRONMENT ]]; then
        >&2 echo "Error: no such environment: $@"
    elif [[ $_EXIT_CODE -eq $NO_WRITE_ACCESS ]]; then
        >&2 echo "Cannot activate environment $@, do not have write access to write conda symlink"
    else
        "$_THIS_DIR/conda" ..sourcehelp
        return 1
    fi
    return $_EXIT_CODE
fi

_NEW_PATH=$("$_THIS_DIR/conda" ..activate "$@")
if (( $? == 0 )); then
    export PATH=$_NEW_PATH
    # If the string contains / it's a path
    if [[ "$@" == */* ]]; then
        export CONDA_DEFAULT_ENV=$(get_abs_filename "$@")
    else
        export CONDA_DEFAULT_ENV="$@"
    fi

    if (( $("$_THIS_DIR/conda" ..changeps1) ));  then
            CONDA_OLD_PS1="$PS1"
            PS1="($CONDA_DEFAULT_ENV)$PS1"
    fi
else
    return $?
fi

if [[ -n $BASH_VERSION ]]; then
    hash -r
elif [[ -n $ZSH_VERSION ]]; then
    rehash
else
    echo "Only bash and zsh are supported"
    return 1
fi
