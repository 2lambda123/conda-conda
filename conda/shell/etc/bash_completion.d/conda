# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

# Bash command completion for conda
#
# This is based on completion for `fish`. Should be functionally equivalent.

function __comp_conda_commands () {
    for f in $CONDA_PREFIX/lib/python*/site-packages/conda/cli/main_*.py
    do
        expr match "$f" '.*_\([a-z]\+\)\.py$'
    done

    for f in $CONDA_PREFIX/bin/conda-*
    do
        if test -x "$f" -a ! -d "$f"
        then
            expr match "$f" '^.*/conda-\(.*\)'
        fi
    done
    echo activate
    echo deactivate
}

function __comp_conda_env_commands() {
    for f in $CONDA_PREFIX/lib/python*/site-packages/conda_env/cli/main_*.py
    do
        expr match "$f" '.*_\([a-z]\+\)\.py$'
    done
}

function __comp_conda_envs() {
    echo base
    conda config --json --show envs_dirs | \
        python -c "import json, os, sys; from os.path import isdir, join; print('\n'.join(d for ed in json.load(sys.stdin)['envs_dirs'] if isdir(ed) for d in os.listdir(ed) if isdir(join(ed, d))))"
}

function __comp_conda_packages() {
    conda list | awk 'NR > 3 {print $1}'
}

_comp_conda()
{
    local cur prev words cword
    _init_completion || return

    # first command options
    if [[ $cur == -* ]]; then
        COMPREPLY=( $(compgen -W '$(_parse_help "$1")' -- "$cur") )
        return
    fi

    local word_list
    case "$prev" in
        conda)
            word_list=$(__comp_conda_commands)
            ;;
        env)
            word_list=$(__comp_conda_env_commands)
            ;;
        activate)
            word_list=$(__comp_conda_envs)
            ;;
        remove|uninstall|upgrade|update)
            word_list=$(__comp_conda_packages)
            ;;
    esac
    COMPREPLY=( $(compgen -W '$word_list' -- "$cur" ) )
} &&
complete -F _comp_conda conda

# vim: ft=sh
